@inherits LayoutComponentBase

<MudThemeProvider IsDarkMode="@isDarkMode" Theme="_theme" />
<MudDialogProvider />
<MudSnackbarProvider />

<!-- MainLayout.razor -->
<MudLayout>
    <MudAppBar Color="Color.Primary" Elevation="3">
        <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@((e) => DrawerToggle())" />
        <MudIcon Icon="@Icons.Material.TwoTone.LightbulbCircle" Size="Size.Large" Color="Color.Dark" />

        <h2>ThoughtHarbour</h2>
        

        <MudIconButton Icon="@currentIcon" Style="margin-left: auto;" Size=Size.Large OnClick="@(() => DarkModeToggled(!isDarkMode))" />
    </MudAppBar>
    <MudDrawer @bind-Open="@_drawerOpen">
        <MyNavMenu />
    </MudDrawer>

    <MudMainContent>
        @Body
    </MudMainContent>
</MudLayout>

@code {
    bool _drawerOpen = true;

    void DrawerToggle()
    {
        _drawerOpen = !_drawerOpen;
    }

    private MudTheme _theme = new();
    public bool isDarkMode = true;

    // Define the icon based on the theme
    public string currentIcon => isDarkMode ? Icons.Material.Outlined.WbSunny : Icons.Material.Outlined.NightsStay;

    protected override void OnInitialized()
    {
        UpdateToggleIcon();
    }

    private void DarkModeToggled(bool isChecked)
    {
        isDarkMode = isChecked;
        UpdateToggleIcon();
    }

    private void UpdateToggleIcon()
    {
        // Update logic if needed
    }
}
